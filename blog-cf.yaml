AWSTemplateFormatVersion: '2010-09-09'

Description: Blog template


Parameters:
  BlogName:
    Description: Name of the blog 
    Type: String
  DomainName:
    Description: Top level domain name
    Type: String
  CertARN:
    Description: Certificate ARN
    Type: String

    
Resources:
  RootBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      BucketName: !Sub '${BlogName}.${DomainName}'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  RootBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref RootBucket
      PolicyDocument:
        Statement:
          - Action:
            - 's3:GetObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref RootBucket
                - /*
            Principal: '*'
            Sid: PublicReadGetObject


  WWWBucket:
    Type: AWS::S3::Bucket
    DependsOn: RootBucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub 'www.${BlogName}.${DomainName}'
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref RootBucket

# Remove certificate creation from this cloudformation
#
#  CertificateManagerCertificate:
#    Type: AWS::CertificateManager::Certificate
#    Properties:
#      DomainName: !Sub '${BlogName}.${DomainName}'
#      ValidationMethod: DNS
#

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: RootBucket
    Properties:
      DistributionConfig:
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref CertARN
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only
        Aliases:
          - !Sub '${BlogName}.${DomainName}'
        Origins:
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: 'http-only'
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
            DomainName: !GetAtt 'RootBucket.DomainName'
            Id: !Sub 'S3-${AWS::StackName}-root'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          TargetOriginId: !Sub 'S3-${AWS::StackName}-root' 
          ViewerProtocolPolicy: 'redirect-to-https'
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: true
